services:
  nginx:
    image: nginx:1.27-alpine
    restart: always
    volumes:
        - ./static:/code/static
        - ./media:/code/media
        - ./nginx/:/etc/nginx/conf.d

    ports:
      - '8080:80'
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - web

  web:
    image: &image plebranch
    build: .
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    restart: always
    command:  ["uvicorn", "--host", "0.0.0.0", "--port", "8000", "--workers", "2",  "--log-level", "info", "config.asgi:application"]
    volumes: &volumes
      - /var/run/docker.sock:/var/run/docker.sock
      - ./static:/code/static
      - ./media:/code/media
    env_file: &env_file
      ./.docker.env
    depends_on:
      - db
      - redis

  db:
    image: postgres:16-alpine
    command: postgres -N 568
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=plbranch
      - POSTGRES_USER=plbranch
      - POSTGRES_PASSWORD=plrbranch
      - PGDATA=/var/lib/postgresql/data/

  redis:
    restart: always
    image: redis:7-alpine
    command: redis-server --loglevel warning
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 512M

  celery-beat:
    image: *image
    restart: unless-stopped
    env_file: *env_file
    command: ["celery", "-A", "config", "beat", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler",]
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    volumes: *volumes
    depends_on:
      - db
      - redis

  migration:
    image: *image
    env_file: *env_file
    command: /bin/sh -c 'python manage.py migrate && python manage.py collectstatic --noinput && python manage.py seed_db'
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    volumes: *volumes
    depends_on:
      - db
      - redis

  celery-worker:
    image: *image
    restart: unless-stopped
    env_file: *env_file
    command: ["celery", "-A", "config", "worker",  "-l", "DEBUG", "--concurrency", "3"]
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.4'
          memory: 768M
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
    volumes: *volumes
    depends_on:
      - db
      - redis
volumes:
  postgres_data:
  redis_data:
